<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1239,4499" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueawb="clr-namespace:UiPath.Excel.Activities.Windows.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.SmartData.PositionBasedExtraction.Storage</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Windows.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.SmartData.PositionBasedExtraction</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="828,4434" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="766,4346" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="732,4236" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="p6:DocumentTaxonomy" Name="Taxonomy" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="670,136" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[Taxonomy]" />
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="670,4012" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="QC extracted data.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="636,3720" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd2:DataTable" Name="qc_col" />
                      <Variable x:TypeArguments="sd2:DataSet" Name="qc_dataset" />
                      <Variable x:TypeArguments="sd2:DataTable" Name="dt" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:BuildDataTable DataTable="[qc_col]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="574,92" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Email_x0020_Address&quot; msdata:Caption=&quot;&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Employement_x0020_Status&quot; msdata:Caption=&quot;&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Loan_x0020_Type&quot; msdata:Caption=&quot;&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;30&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Credit_x0020_Score&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Income&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; default=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Debt-To-Income&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; default=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Eligibility&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;30&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
                    <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="574,191" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[qc_col]" />
                    <ui:ForEachFileX DisplayName="For Each File in Folder" Filter="*.pdf" Folder="C:\Users\Aston Jr\Desktop\Ui Path\Taxonomy_PDF_Scrapper\QCs" sap:VirtualizedContainerService.HintSize="574,1810" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="CreationDateNewFirst" SkipFolderWithoutPermission="False">
                      <ui:ForEachFileX.Body>
                        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="540,1518" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="docText" />
                              <Variable x:TypeArguments="p5:Document" Name="objModel" />
                              <Variable x:TypeArguments="p4:ExtractionResult" Name="ext_Result" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Processing Current file&quot;]" />
                            <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Document" DocumentObjectModel="[objModel]" DocumentPath="[CurrentFile.FullName]" DocumentText="[docText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="478,329" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                              <p:DigitizeDocument.OCREngine>
                                <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))" Argument1="{x:Reference __ReferenceID0}" Argument2="{x:Reference __ReferenceID1}">
                                  <p1:UiPathDocumentOCR Endpoint="{x:Null}" Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="25iDJhybhwmcpnyhYc5naCDgRq2qw5TFFeZSjff4B/QMAqP0o99a5dwQ2C2m9sTx6GNO8yOlDkUm0pK+R7HuXA==" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,25" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_1" Language="auto" NoopExecution="False" Profile="None" Scale="1" Timeout="100000">
                                    <p1:UiPathDocumentOCR.Image>
                                      <InArgument x:TypeArguments="sd:Image">
                                        <DelegateArgumentValue x:TypeArguments="sd:Image" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_1">
                                          <DelegateInArgument x:TypeArguments="sd:Image" x:Name="__ReferenceID0" Name="Image" />
                                        </DelegateArgumentValue>
                                      </InArgument>
                                    </p1:UiPathDocumentOCR.Image>
                                    <p1:UiPathDocumentOCR.PredictionId>
                                      <InArgument x:TypeArguments="x:String">
                                        <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_2">
                                          <DelegateInArgument x:TypeArguments="x:String" x:Name="__ReferenceID1" Name="PredictionId" />
                                        </DelegateArgumentValue>
                                      </InArgument>
                                    </p1:UiPathDocumentOCR.PredictionId>
                                  </p1:UiPathDocumentOCR>
                                </ActivityFunc>
                              </p:DigitizeDocument.OCREngine>
                            </p:DigitizeDocument>
                            <p2:DataExtractionScope ClassificationResult="{x:Null}" ApplyGenerativeValidation="False" DisplayName="Data Extraction Scope" DocumentObjectModel="[objModel]" DocumentPath="[CurrentFile.FullName]" DocumentText="[docText]" DocumentTypeId="QC.QCDetails.qcdetails" ExtractionResult="[ext_Result]" FormatValuesIfPossible="True" GenerativeValidationConfidenceThreshold="99" sap:VirtualizedContainerService.HintSize="478,540" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI244358c7972c4a9aa0cb1f453a844b47&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;QC.QCDetails.qcdetails&quot;:{&quot;FieldMappings&quot;:{&quot;QC.QCDetails.qcdetails.EmailAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;QC.QCDetails.qcdetails.EmailAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;QC.QCDetails.qcdetails.EmploymentStatus&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;QC.QCDetails.qcdetails.EmploymentStatus&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;QC.QCDetails.qcdetails.LoanType&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;QC.QCDetails.qcdetails.LoanType&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;QC.QCDetails.qcdetails.CreditScore&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;QC.QCDetails.qcdetails.CreditScore&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;QC.QCDetails.qcdetails.Income(Ksh)&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;QC.QCDetails.qcdetails.Income(Ksh)&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;QC.QCDetails.qcdetails.Debt-To-Income(%)&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;QC.QCDetails.qcdetails.Debt-To-Income(%)&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI244358c7972c4a9aa0cb1f453a844b47&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI244358c7972c4a9aa0cb1f453a844b47&quot;:[]}}">
                              <p2:DataExtractionScope.Extractors>
                                <p2:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="25iDJhybhwmcpnyhYc5naCDgRq2qw5TFFeZSjff4B/QMAqP0o99a5dwQ2C2m9sTx6GNO8yOlDkUm0pK+R7HuXA==" DisplayName="Form Extractor" Endpoint="https://du.uipath.com/svc/formextractor" sap:VirtualizedContainerService.HintSize="223,186" sap2010:WorkflowViewState.IdRef="FormExtractor_1" MinOverlapPercentage="65" PersistenceId="UI244358c7972c4a9aa0cb1f453a844b47" SendDocumentsForAlgorithmImprovements="True" SerializedSettings="{}{}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;QC.QCDetails.qcdetails&quot;,&quot;FormId&quot;:&quot;d02a79c5&quot;,&quot;FormName&quot;:&quot;qcTemplate&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,594.0,841.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;5/29/24,&quot;,&quot;Box&quot;:[13.44,25.51,28.89,10.91]},{&quot;Text&quot;:&quot;5:09&quot;,&quot;Box&quot;:[13.44,56.63,15.56,10.91]},{&quot;Text&quot;:&quot;PM&quot;,&quot;Box&quot;:[13.44,74.41,11.99,10.91]},{&quot;Text&quot;:&quot;Loan&quot;,&quot;Box&quot;:[89.05,46.5,53.38,32.74]},{&quot;Text&quot;:&quot;QC&quot;,&quot;Box&quot;:[89.05,106.52,35.98,32.74]},{&quot;Text&quot;:&quot;Loan&quot;,&quot;Box&quot;:[130.89,46.5,24.23,14.59]},{&quot;Text&quot;:&quot;Quali&quot;,&quot;Box&quot;:[130.89,73.46,24.93,14.59]},{&quot;Text&quot;:&quot;cation&quot;,&quot;Box&quot;:[130.89,104.48,30.32,14.59]},{&quot;Text&quot;:&quot;Check&quot;,&quot;Box&quot;:[130.89,137.54,30.36,14.59]},{&quot;Text&quot;:&quot;1/2&quot;,&quot;Box&quot;:[818.19,558.55,11.12,10.91]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;QC.QCDetails.qcdetails.EmailAddress&quot;,&quot;Box&quot;:[219.6,38.7,198.9,18.9]},{&quot;Field&quot;:&quot;QC.QCDetails.qcdetails.EmploymentStatus&quot;,&quot;Box&quot;:[315.0,38.7,227.7,27.0]},{&quot;Field&quot;:&quot;QC.QCDetails.qcdetails.LoanType&quot;,&quot;Box&quot;:[419.4,40.5,247.5,27.9]},{&quot;Field&quot;:&quot;QC.QCDetails.qcdetails.CreditScore&quot;,&quot;Box&quot;:[520.2,37.8,232.2,26.1]},{&quot;Field&quot;:&quot;QC.QCDetails.qcdetails.Income(Ksh)&quot;,&quot;Box&quot;:[623.7,42.3,240.3,27.9]},{&quot;Field&quot;:&quot;QC.QCDetails.qcdetails.Debt-To-Income(%)&quot;,&quot;Box&quot;:[725.4,36.9,243.0,26.1]}],&quot;Tables&quot;:[]},{&quot;Page&quot;:1,&quot;Size&quot;:[0.0,0.0,594.0,841.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Forms&quot;,&quot;Box&quot;:[25.34,304.17,44.87,20.11]},{&quot;Text&quot;:&quot;5/29/24,&quot;,&quot;Box&quot;:[13.44,25.51,28.89,10.91]},{&quot;Text&quot;:&quot;5:09&quot;,&quot;Box&quot;:[13.44,56.63,15.56,10.91]},{&quot;Text&quot;:&quot;PM&quot;,&quot;Box&quot;:[13.44,74.41,11.99,10.91]},{&quot;Text&quot;:&quot;Loan&quot;,&quot;Box&quot;:[13.44,327.63,17.78,10.91]},{&quot;Text&quot;:&quot;QC&quot;,&quot;Box&quot;:[13.44,347.64,11.99,10.91]},{&quot;Text&quot;:&quot;Google&quot;,&quot;Box&quot;:[26.41,244.59,57.08,19.2]},{&quot;Text&quot;:&quot;2/2&quot;,&quot;Box&quot;:[818.19,558.55,11.12,10.91]}],&quot;Fields&quot;:[],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}}]" Timeout="100000">
                                  <p2:FormExtractor.DocumentBounds>
                                    <InArgument x:TypeArguments="p4:ResultsDocumentBounds">
                                      <DelegateArgumentValue x:TypeArguments="p4:ResultsDocumentBounds">
                                        <DelegateInArgument x:TypeArguments="p4:ResultsDocumentBounds" Name="DocumentBounds" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:FormExtractor.DocumentBounds>
                                  <p2:FormExtractor.DocumentObjectModel>
                                    <InArgument x:TypeArguments="p5:Document">
                                      <DelegateArgumentValue x:TypeArguments="p5:Document">
                                        <DelegateInArgument x:TypeArguments="p5:Document" Name="DocumentObjectModel" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:FormExtractor.DocumentObjectModel>
                                  <p2:FormExtractor.DocumentPath>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:FormExtractor.DocumentPath>
                                  <p2:FormExtractor.DocumentText>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:FormExtractor.DocumentText>
                                  <p2:FormExtractor.ExtractorDocumentType>
                                    <InArgument x:TypeArguments="p3:ExtractorDocumentType">
                                      <DelegateArgumentValue x:TypeArguments="p3:ExtractorDocumentType">
                                        <DelegateInArgument x:TypeArguments="p3:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:FormExtractor.ExtractorDocumentType>
                                  <p2:FormExtractor.ExtractorResult>
                                    <OutArgument x:TypeArguments="p3:ExtractorResult">
                                      <DelegateArgumentReference x:TypeArguments="p3:ExtractorResult">
                                        <DelegateOutArgument x:TypeArguments="p3:ExtractorResult" Name="ExtractorResult" />
                                      </DelegateArgumentReference>
                                    </OutArgument>
                                  </p2:FormExtractor.ExtractorResult>
                                  <p2:FormExtractor.PredictionId>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:FormExtractor.PredictionId>
                                </p2:FormExtractor>
                              </p2:DataExtractionScope.Extractors>
                            </p2:DataExtractionScope>
                            <p2:ExportExtractionResults DataSet="[qc_dataset]" DisplayName="Export Extraction Results" ExtractionResult="[ext_Result]" sap:VirtualizedContainerService.HintSize="478,206" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False" />
                            <ueab:WriteRangeX Append="True" Destination="[Excel.Sheet(&quot;Sheet1&quot;)]" DisplayName="Write DataTable to Excel" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="478,182" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False" Source="[qc_dataset.Tables(0)]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachFileX.Body>
                    </ui:ForEachFileX>
                    <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;G2&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="574,191" sap2010:WorkflowViewState.IdRef="WriteCellX_4" Value="[&quot;=IF(ISBLANK(D2), &quot;&quot;&quot;&quot;, IF(D2 &gt; 599, &quot;&quot;Eligible&quot;&quot;, &quot;&quot;Not Eligible&quot;&quot;))&quot;]" />
                    <ueawb:SelectRangeX DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="574,122" sap2010:WorkflowViewState.IdRef="SelectRangeX_2" Range="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;G2&quot;)]" />
                    <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="574,247" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_5" InScope="[Excel]" ScopeIdentifier="Excel" Shortcuts="[d(hk)][d(ctrl)d(shift)][k(down)][u(shift)u(ctrl)][u(hk)]" Version="V3">
                      <uix:NKeyboardShortcuts.VerifyOptions>
                        <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                          <uix:VerifyExecutionOptions.Retry>
                            <InArgument x:TypeArguments="x:Boolean" />
                          </uix:VerifyExecutionOptions.Retry>
                          <uix:VerifyExecutionOptions.Timeout>
                            <InArgument x:TypeArguments="x:Double" />
                          </uix:VerifyExecutionOptions.Timeout>
                        </uix:VerifyExecutionOptions>
                      </uix:NKeyboardShortcuts.VerifyOptions>
                    </uix:NKeyboardShortcuts>
                    <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="574,247" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_6" InScope="[Excel]" ScopeIdentifier="Excel" Shortcuts="[d(hk)][d(ctrl)]d[u(ctrl)][u(hk)]" Version="V3">
                      <uix:NKeyboardShortcuts.VerifyOptions>
                        <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                          <uix:VerifyExecutionOptions.Retry>
                            <InArgument x:TypeArguments="x:Boolean" />
                          </uix:VerifyExecutionOptions.Retry>
                          <uix:VerifyExecutionOptions.Timeout>
                            <InArgument x:TypeArguments="x:Double" />
                          </uix:VerifyExecutionOptions.Timeout>
                        </uix:VerifyExecutionOptions>
                      </uix:NKeyboardShortcuts.VerifyOptions>
                    </uix:NKeyboardShortcuts>
                    <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="574,247" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_1" InScope="[Excel]" ScopeIdentifier="Excel" Shortcuts="[d(hk)][d(ctrl)]a[u(ctrl)][u(hk)][d(hk)][d(alt)]h[u(alt)][u(hk)][d(hk)]o[u(hk)][d(hk)]i[u(hk)]" Version="V3">
                      <uix:NKeyboardShortcuts.VerifyOptions>
                        <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                          <uix:VerifyExecutionOptions.Retry>
                            <InArgument x:TypeArguments="x:Boolean" />
                          </uix:VerifyExecutionOptions.Retry>
                          <uix:VerifyExecutionOptions.Timeout>
                            <InArgument x:TypeArguments="x:Double" />
                          </uix:VerifyExecutionOptions.Timeout>
                        </uix:VerifyExecutionOptions>
                      </uix:NKeyboardShortcuts.VerifyOptions>
                    </uix:NKeyboardShortcuts>
                    <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="574,247" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_7" InScope="[Excel]" ScopeIdentifier="Excel" Shortcuts="[d(hk)][d(ctrl)][k(home)][u(ctrl)][u(hk)]" Version="V3">
                      <uix:NKeyboardShortcuts.VerifyOptions>
                        <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                          <uix:VerifyExecutionOptions.Retry>
                            <InArgument x:TypeArguments="x:Boolean" />
                          </uix:VerifyExecutionOptions.Retry>
                          <uix:VerifyExecutionOptions.Timeout>
                            <InArgument x:TypeArguments="x:Double" />
                          </uix:VerifyExecutionOptions.Timeout>
                        </uix:VerifyExecutionOptions>
                      </uix:NKeyboardShortcuts.VerifyOptions>
                    </uix:NKeyboardShortcuts>
                    <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="574,238" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_2" InScope="[Excel]" ScopeIdentifier="Excel" Shortcuts="[d(hk)][d(ctrl)]s[u(ctrl)][u(hk)]" Version="V3">
                      <uix:NKeyboardShortcuts.VerifyOptions>
                        <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                          <uix:VerifyExecutionOptions.Retry>
                            <InArgument x:TypeArguments="x:Boolean" />
                          </uix:VerifyExecutionOptions.Retry>
                          <uix:VerifyExecutionOptions.Timeout>
                            <InArgument x:TypeArguments="x:Double" />
                          </uix:VerifyExecutionOptions.Timeout>
                        </uix:VerifyExecutionOptions>
                      </uix:NKeyboardShortcuts.VerifyOptions>
                    </uix:NKeyboardShortcuts>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>